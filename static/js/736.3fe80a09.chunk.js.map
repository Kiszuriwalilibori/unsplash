{"version":3,"file":"static/js/736.3fe80a09.chunk.js","mappings":"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","sources":["pages/ResultsPage/parts/HeaderIcons.tsx","pages/ResultsPage/parts/Modal/parts/Image.tsx","pages/ResultsPage/parts/Modal/parts/AuthorDataContainer.tsx","pages/ResultsPage/parts/Modal/parts/AuthorName&Twitter.tsx","pages/ResultsPage/parts/Modal/parts/AuthorProfileImage.tsx","pages/ResultsPage/parts/Modal/parts/LocationContainer.tsx","pages/ResultsPage/parts/Modal/parts/ImageLocation.tsx","pages/ResultsPage/parts/Modal/parts/ModalCloseButton.tsx","pages/ResultsPage/parts/Modal/parts/ModalFadeContainer.tsx","pages/ResultsPage/parts/Modal/parts/NextImage.tsx","pages/ResultsPage/parts/Modal/parts/PreviousImage.tsx","pages/ResultsPage/parts/Modal/ImageMagnified.tsx","pages/ResultsPage/parts/Modal/Modal.tsx","pages/ResultsPage/parts/ResultsPageContainer.tsx","pages/ResultsPage/parts/Image.tsx","pages/ResultsPage/parts/ImagesSection/Subject.tsx","pages/ResultsPage/parts/ImagesSection/PageBottomControl.jsx","pages/ResultsPage/parts/ImagesSection/ImagesSection.tsx","pages/ResultsPage/ResultsPage.tsx"],"sourcesContent":["import * as React from \"react\";\r\nconst HeaderIcons: React.FC = props => {\r\n  return <div className=\"modalbody__header-icons\">{props.children}</div>;\r\n};\r\nexport default HeaderIcons;\r\n","import * as React from \"react\";\r\ninterface Props {\r\n  author: string;\r\n  urls: string;\r\n}\r\n\r\nconst Image = (props: Props) => {\r\n  const { author, urls } = props;\r\n\r\n  return <img alt={author} className=\"modalbody__image fade-in\" sizes=\"(max-width: 767px) 100vw, (max-width: 532px) 500px, (max-height: 521px) 500px, (min-aspect-ratio: 3711/2562) calc((calc(100vh - 175px)) * 1.44848), calc(100vw - 32px)\" srcSet={urls} />;\r\n};\r\nexport default Image;\r\n","import * as React from 'react';\r\nconst AuthorDataContainer: React.FC = props => {\r\n    return (\r\n        <div className=\"modalbody__header-author\">\r\n            <div className=\"author-data\">{props.children}</div>\r\n        </div>\r\n    );\r\n};\r\nexport default AuthorDataContainer;\r\n","import * as React from \"react\";\r\ninterface Props {\r\n  author: string;\r\n  twitter: string;\r\n}\r\nconst AuthorNameTwitter = (props: Props) => {\r\n  const { author, twitter } = props;\r\n  return (\r\n    <div className=\"modalbody__header-name-twitter\">\r\n      <div className=\"modalbody__header-name\">{author}</div>\r\n      {twitter && <div className=\"modalbody__header-twitter\">{\"@\" + twitter}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthorNameTwitter;\r\n","import * as React from \"react\";\r\ninterface Props {\r\n  profileImageLink: string;\r\n  author: string;\r\n}\r\nconst ProfileImage = (props: Props) => {\r\n  return (\r\n    <div className=\"modalbody__header-face\">\r\n      <img className=\"modalbody__header-image\" src={props.profileImageLink} alt={props.author} />\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileImage;\r\n","import * as React from 'react';\r\nconst LocationContainer: React.FC = props => {\r\n    return <div className=\"modalbody__header-author footer\">{props.children}</div>;\r\n};\r\nexport default LocationContainer;\r\n","import * as React from \"react\";\r\n\r\nimport LocationContainer from \"./LocationContainer\";\r\nimport Icons from \"assets/icons\";\r\n\r\nimport { withDescription } from \"HOCs\";\r\n\r\ninterface Props {\r\n    location: string;\r\n}\r\nconst ImageLocation = (props: Props) => {\r\n    const { location } = props;\r\n\r\n    return <LocationContainer>{location && withDescription(Icons.Location, location)}</LocationContainer>;\r\n};\r\nexport default ImageLocation;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Icons from \"assets/icons\";\r\n\r\nconst ModalCloseButton = () => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"modal-close__wrapper\">\r\n            <button\r\n                aria-label=\"Close\"\r\n                className=\"modal-close__button\"\r\n                type=\"button\"\r\n                onClick={() => dispatch({ type: \"MODAL_HIDE\" })}\r\n            >\r\n                <Icons.Close />\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalCloseButton;\r\n","import * as React from 'react';\r\nconst ModalFadeContainer: React.FC = props => {\r\n    return <div className=\"modalbody__container fade-in\">{props.children}</div>;\r\n};\r\nexport default ModalFadeContainer;\r\n","import * as React from \"react\";\r\n\r\nimport { debounce } from \"lodash\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport useDispatchAction from \"hooks/useDispatchAction\";\r\nimport Icons from \"assets/icons\";\r\n\r\nimport { selectNextModalId } from \"reduxware/redux/selectors\";\r\n\r\nconst NextImage = () => {\r\n    const nextId = useSelector(selectNextModalId);\r\n    const { setImageIdForModal } = useDispatchAction();\r\n\r\n    const showModal = React.useCallback(\r\n        debounce(() => {\r\n            nextId && setImageIdForModal(nextId);\r\n        }, 100),\r\n        [nextId]\r\n    );\r\n    return (\r\n        <aside className=\"modalbody__aside right\" onClick={showModal}>\r\n            <div className=\"modalbody__arrow-box\">\r\n                <Icons.Next className={nextId ? \"modalbody__arrow-svg visible\" : \"modalbody__arrow-svg\"} />\r\n            </div>\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default NextImage;\r\n","import * as React from \"react\";\r\n\r\nimport { debounce } from \"lodash\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport useDispatchAction from \"hooks/useDispatchAction\";\r\nimport Icons from \"assets/icons\";\r\n\r\nimport { selectPreviousModalId } from \"reduxware/redux/selectors\";\r\n\r\nconst PreviousImage = () => {\r\n    const Id = useSelector(selectPreviousModalId);\r\n\r\n    const { setImageIdForModal } = useDispatchAction();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const showModal = React.useCallback(\r\n        debounce(() => {\r\n            Id && setImageIdForModal(Id);\r\n        }, 100),\r\n        [Id]\r\n    );\r\n    return (\r\n        <aside className=\"modalbody__aside left\" onClick={showModal}>\r\n            <div className=\"modalbody__arrow-box\">\r\n                <Icons.Previous className={Id ? \"modalbody__arrow-svg visible\" : \"modalbody__arrow-svg\"} />\r\n            </div>\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default PreviousImage;\r\n","import * as React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport HeaderIcons from \"../HeaderIcons\";\r\nimport Icons from \"assets/icons\";\r\n\r\nimport {\r\n    Image,\r\n    AuthorProfileImage,\r\n    AuthorNameTwitter,\r\n    ToPreviousImage,\r\n    ToNextImage,\r\n    AuthorDataContainer,\r\n    ModalCloseButton,\r\n    ModalFadeContainer,\r\n    ImageLocation,\r\n} from \"./parts\";\r\n\r\nimport { withDescription, WithButtonAndWrapperForIcon } from \"HOCs\";\r\nimport { selectDataForModal } from \"reduxware/redux/selectors\";\r\n\r\nconst ImageMagnified = () => {\r\n    const { location, author, twitter, urls, profileImage } = useSelector(selectDataForModal);\r\n\r\n    if (!urls) return null;\r\n    return (\r\n        <ModalFadeContainer>\r\n            <ModalCloseButton />\r\n            <ToPreviousImage />\r\n            <article className=\"modalbody\">\r\n                <header className=\"modalbody__header\">\r\n                    <AuthorDataContainer>\r\n                        <AuthorProfileImage profileImageLink={profileImage} author={author} />\r\n                        <AuthorNameTwitter author={author} twitter={twitter} />\r\n                    </AuthorDataContainer>\r\n\r\n                    <HeaderIcons>\r\n                        <WithButtonAndWrapperForIcon ariaLabel=\"Like\">\r\n                            <Icons.Like />\r\n                        </WithButtonAndWrapperForIcon>\r\n                        <WithButtonAndWrapperForIcon ariaLabel=\"Add\">\r\n                            <Icons.Add />\r\n                        </WithButtonAndWrapperForIcon>\r\n                    </HeaderIcons>\r\n                </header>\r\n\r\n                <Image author={author} urls={urls} />\r\n\r\n                <footer className=\"modalbody__header footer\">\r\n                    <ImageLocation location={location} />\r\n                    <WithButtonAndWrapperForIcon ariaLabel=\"Share\">\r\n                        {withDescription(Icons.Share, \"Share\")}\r\n                    </WithButtonAndWrapperForIcon>\r\n\r\n                    <WithButtonAndWrapperForIcon ariaLabel=\"Info\">\r\n                        {withDescription(Icons.Info, \"Info\")}\r\n                    </WithButtonAndWrapperForIcon>\r\n                </footer>\r\n            </article>\r\n            <ToNextImage />\r\n        </ModalFadeContainer>\r\n    );\r\n};\r\n\r\nexport default ImageMagnified;\r\n\r\n/**\r\n * todo własciwie urls jest mocno wykluczjące, może by pobrać i sprawdzić urls o poziom wyżej\r\n * */\r\n","import * as React from \"react\";\r\nimport Modal from '@mui/material/Modal';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { RootStateType } from \"types\";\r\nimport ImageMagnified from \"./ImageMagnified\";\r\n\r\ninterface Props {\r\n  isModalVisible: boolean;\r\n}\r\n\r\nfunction MyModal(props: Props) {\r\n  const { isModalVisible } = props;\r\n  return (\r\n    <div>\r\n      <Modal open={isModalVisible} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\" id=\"my-modal\">\r\n        <ImageMagnified />\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType) => ({\r\n  isModalVisible: state.modal.isVisible,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(MyModal);\r\n","import * as React from \"react\";\r\n\r\nconst ResultsPageContainer: React.FC = props => {\r\n  return <div className=\"images__background\">{props.children}</div>;\r\n};\r\n\r\nexport default ResultsPageContainer;\r\n","import * as React from \"react\";\r\n\r\nimport { debounce } from \"lodash\";\r\n\r\nimport useDispatchAction from \"hooks/useDispatchAction\";\r\nimport { AppDispatch, FetchImages } from \"types/index\";\r\nimport { fetchImages } from \"reduxware/redux/thunks\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from \"@mui/material\";\r\n\r\ninterface Props {\r\n    id: string;\r\n    urls: string;\r\n    description: string;\r\n    user: string;\r\n    tags: { title: string }[];\r\n    loadHandler?: () => void;\r\n    fetchImages: FetchImages;\r\n}\r\n\r\nconst buttonSx = {\r\n    backgroundColor: \"#eee\",\r\n    paddingRight: \"8px\",\r\n    paddingLeft: \"8px\",\r\n    marginBottom: \"8px\",\r\n    marginLeft: \"$tag-offset\",\r\n    borderRadius: \"2px\",\r\n    textDecoration: \"none\",\r\n    fontSize: \"14px\",\r\n    transition: \"all 0.1s ease-in-out\",\r\n    textTransform: \"capitalize\",\r\n    lineHeight: \"26px\",\r\n    height: \"26px\",\r\n    display: \"inline-block\",\r\n    color: \"#767676\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": { backgroundColor: \"$color-dark-2\", color: \"$color-dark-1\" },\r\n};\r\nconst Image = (props: Props) => {\r\n    const { id, user, description, urls, tags, loadHandler, fetchImages } = props;\r\n    const refTags = React.useRef<HTMLDivElement>(null);\r\n    const { setImageIdForModal, showModal } = useDispatchAction();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const activateModal = React.useCallback(\r\n        debounce(() => {\r\n            setImageIdForModal(id);\r\n            showModal();\r\n        }, 100),\r\n        [id]\r\n    );\r\n    return (\r\n        <figure className=\"fotos__box visible fade-in\" data-user={`Author: ${user}`} data-description={description}>\r\n            <img\r\n                className=\"fotos__image\"\r\n                alt={description}\r\n                sizes=\"(min-width: 1335px) 416px, (min-width: 992px) calc(calc(100vw - 72px) / 3), (min-width: 768px) calc(calc(100vw - 48px) / 2), 100vw\"\r\n                srcSet={urls}\r\n                itemProp=\"thumbnailUrl\"\r\n                onLoad={() => {\r\n                    refTags.current?.classList.add(\"active\");\r\n                    loadHandler && loadHandler();\r\n                }}\r\n                onError={() => loadHandler && loadHandler()}\r\n                onClick={activateModal}\r\n            ></img>\r\n            <figcaption className=\"container-for-tags\" ref={refTags}>\r\n                {tags.map((item, index) => (\r\n                    <span\r\n                        className=\"fotos__tag\"\r\n                        tabIndex={0}\r\n                        key={index}\r\n                        onClick={() => {\r\n                            fetchImages(item.title);\r\n                        }}\r\n                    >\r\n                        {\" \" + item.title || \"\"}\r\n                    </span>\r\n                ))}\r\n            </figcaption>\r\n        </figure>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\r\n    fetchImages: (str: string) => dispatch(fetchImages(str)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(Image);\r\n// export default Image;\r\n","import * as React from \"react\";\r\n\r\nimport { shallowEqual} from \"react-redux\";\r\n\r\nimport { useTypedSelector } from \"hooks/useTypedSelector\";\r\n\r\nconst Subject = () => {\r\n  const subject = useTypedSelector(state=>state.images.subject, shallowEqual);\r\n  return(\r\n  <div className=\"images__header\">\r\n    <h2 className=\"images__subject\">{subject}</h2>{\" \"}\r\n  </div>)\r\n};\r\n\r\nexport default Subject;","const pageBottomControl = props => {\r\n  const { inViewport, forwardedRef } = props;\r\n\r\n  return (\r\n    <div className=\"viewport-block\" ref={forwardedRef}>\r\n      <div style={{ width: \"400px\", height: \"200px\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default pageBottomControl;\r\n","import React, { useCallback, useRef } from \"react\";\r\nimport handleViewport from \"react-in-viewport\";\r\nimport uuid from \"react-uuid\";\r\n\r\nimport { isEmpty, debounce, after } from \"lodash\";\r\nimport { connect, useSelector } from \"react-redux\";\r\n\r\nimport Image from \"../Image\";\r\nimport Subject from \"./Subject\";\r\nimport Block from \"./PageBottomControl\";\r\n\r\nimport { fetchImages } from \"reduxware/redux/thunks\";\r\nimport { AppDispatch, FetchImages, RootStateType } from \"types\";\r\nimport { selectAllImages } from \"reduxware/redux/selectors\";\r\n\r\nconst ViewportBlock = handleViewport(Block);\r\n\r\ninterface Props {\r\n    fetchImages: FetchImages;\r\n    subject: string;\r\n}\r\n\r\nconst ImagesSection = (props: Props) => {\r\n    const { fetchImages, subject } = props;\r\n    const images = useSelector(selectAllImages);\r\n\r\n    const refContainer = useRef<HTMLDivElement>(null);\r\n    const loadingRef = useRef<HTMLDivElement>(null);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const handleScrollBottom = useCallback(\r\n        debounce(() => {\r\n            fetchImages(subject);\r\n        }, 300),\r\n        [fetchImages, subject]\r\n    );\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const loadHandler = useCallback(\r\n        after(images.length, () => {\r\n            refContainer.current?.classList.add(\"active\");\r\n            loadingRef.current?.classList.remove(\"active\");\r\n        }),\r\n        [images]\r\n    );\r\n\r\n    if (!images || isEmpty(images)) return null;\r\n\r\n    return (\r\n        <>\r\n            <Subject />\r\n            <section className=\"fotos__wrapper\">\r\n                <div className=\"fotos__loading active\" ref={loadingRef}>\r\n                    Loading images\r\n                </div>\r\n                <div className=\"fotos__grid\">\r\n                    <article className=\"fotos__container\" id=\"fotos__container\" ref={refContainer}>\r\n                        {images.map(image => (\r\n                            <Image key={uuid()} {...image} loadHandler={loadHandler} />\r\n                        ))}\r\n                        <ViewportBlock onEnterViewport={() => handleScrollBottom()} />\r\n                    </article>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateType) => ({\r\n    subject: state.images.subject,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\r\n    fetchImages: (str: string) => dispatch(fetchImages(str)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagesSection);\r\n","import React  from \"react\";\r\n\r\nimport MyModal from \"./parts/Modal/Modal\";\r\nimport Form from \"components/Form/Form\";\r\nimport Container from \"./parts/ResultsPageContainer\";\r\nimport ErrorMessage from \"components/ErrorMessage\";\r\nimport ImagesSection from \"./parts/ImagesSection/ImagesSection\";\r\n\r\nimport { withFormContainer } from \"HOCs\";\r\n\r\n\r\nconst WrappedForm = withFormContainer(Form);\r\n\r\nconst ResultsPage = () => {\r\n  \r\n  return (\r\n    <Container>\r\n      <ErrorMessage />\r\n      <WrappedForm />\r\n      <MyModal />\r\n      <ImagesSection />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ResultsPage;"],"names":["props","className","children","author","urls","alt","sizes","srcSet","twitter","src","profileImageLink","location","withDescription","Icons","dispatch","useDispatch","type","onClick","nextId","useSelector","selectNextModalId","setImageIdForModal","useDispatchAction","showModal","React","debounce","Id","selectPreviousModalId","selectDataForModal","profileImage","AuthorProfileImage","ariaLabel","connect","state","isModalVisible","modal","isVisible","Modal","open","id","fetchImages","str","user","description","tags","loadHandler","refTags","activateModal","itemProp","onLoad","current","classList","add","onError","ref","map","item","index","tabIndex","title","subject","useTypedSelector","images","shallowEqual","inViewport","forwardedRef","style","width","height","ViewportBlock","handleViewport","Block","selectAllImages","refContainer","useRef","loadingRef","handleScrollBottom","useCallback","after","length","remove","isEmpty","image","uuid","onEnterViewport","WrappedForm","withFormContainer","Form","ErrorMessage"],"sourceRoot":""}