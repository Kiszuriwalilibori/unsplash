{"version":3,"sources":["js/common.js","js/fixtures.js","redux/imagesReducer.js","redux/modalReducer.js","components/awaiting.jsx","components/App.jsx","reportWebVitals.js","serviceWorkerRegistration.ts","index.js"],"names":["splitUrls","obj","thumb","small","regular","extractData","ary","map","item","result","id","urls","tags","description","alt_description","user","name","first_name","last_name","modal","twitter","twitter_username","createFormStyleLocationRelative","str","baseClass","getTags","Set","flat","title","getOptions","value","label","string","toUpperCase","slice","setBackground","backgroundURL","root","document","getElementById","style","background","backgroundSize","classList","add","accessKey","process","trending","getImages","createAction","getHints","clearHints","showError","clearError","setCount","chooseSubject","clearImages","setCollectionLength","showHintsMsg","hideHintsMsg","getBackgroundImage","checkNeighbours","initialState","images","hints","error","code","count","lastFetchedPage","subject","collectionLength","hintsMessageVisible","backgroundImage","currentNeighbours","imagesReducer","createReducer","builder","addCase","state","action","payload","temp","push","apply","index","findIndex","neighbours","pre","post","length","addDefaultCase","fetchHints","pattern","dispatch","getState","Unsplash","search","photos","then","toJson","json","results","catch","err","message","fetchImages","shouldFetch","total_pages","fetchBackgroundImage","getRandomPhoto","query","orientation","isMobile","window","matchMedia","matches","image","full","raw","showModal","hideModal","getDetails","modalReducer","isVisible","details","data","location","city","country","author","profile_image","previous","next","fetchDetails","getPhoto","Awaiting","Component","props","fallback","Results","lazy","Search","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","persistConfig","key","storage","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","thunk","persistor","persistStore","ReactDOM","render","loading","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"6TAEaA,EAAY,SAAAC,GAIvB,OAHcA,EAAIC,MAAQD,EAAIC,MAAJD,UAAkC,KAC9CA,EAAIE,MAAQF,EAAIE,MAAJF,UAAkC,KAC5CA,EAAIG,QAAUH,EAAIG,QAAJH,WAAqC,KAIxDI,EAAc,SAAAC,GAczB,OAbUA,EAAIC,KAAI,SAAAC,GAAS,IAAD,EACpBC,EAAS,GAUb,OATAA,EAAOC,GAAKF,EAAKE,GACjBD,EAAOE,KAAOX,EAAUQ,EAAKG,MAC7BF,EAAOG,KAAOJ,EAAKI,KACnBH,EAAOI,YAAcL,EAAKM,iBAAmBN,EAAKK,aAAe,GACjEJ,EAAOM,MAAM,UAAAP,EAAKO,YAAL,eAAWC,OAAOR,EAAKO,KAAKE,WAAa,IAAMT,EAAKO,KAAKG,UACtET,EAAOU,MAAQ,CACbH,KAAMR,EAAKO,KAAKC,MAAQR,EAAKS,WAAa,IAAMT,EAAKU,WAAa,GAClEE,QAASZ,EAAKO,KAAKM,kBAAoB,IAElCZ,MAKEa,EAAkC,SAACC,EAAKC,GACnD,OAAQD,GACN,IAAK,IACH,MAAM,GAAN,OAAUC,EAAV,iBAEF,IAAK,UACH,MAAM,GAAN,OAAUA,EAAV,iBAEF,QACE,MAAM,GAAN,OAAUA,EAAV,mBAIOC,EAAU,SAAAnB,GAAG,mBACrB,IAAIoB,IACLpB,EACGC,KAAI,SAAAC,GAAI,OAAIA,EAAKI,QACjBe,OACApB,KAAI,SAAAC,GAAI,OAAIA,EAAKoB,YAQjB,IAAMC,EAAa,SAAAvB,GAAG,OAC3BA,EAAIC,KAAI,SAAAC,GACN,MAAO,CAAEsB,MAAOtB,EAAMuB,OANYC,EAMiBxB,EAL9CwB,EAAO,GAAGC,cAAgBD,EAAOE,MAAM,KADzC,IAA+BF,MASzBG,EAAgB,SAAAC,GAC3B,IAAIC,EAAOC,SAASC,eAAe,QAE/BH,GACFC,EAAKG,MAAMC,WAAX,cAA+BL,EAA/B,mCACAC,EAAKG,MAAME,eAAX,SAEAL,EAAKM,UAAUC,IAAI,+B,gCChEvB,oEAAO,IAAMC,EAAY,CAAEA,UAAWC,+CAEzBC,EAAW,CAAC,UAAW,aAAc,cAAe,QAAS,S,gSCG7DC,EAAYC,YAAa,cACzBC,EAAWD,YAAa,aACxBE,EAAaF,YAAa,eAC1BG,EAAYH,YAAa,cACzBI,EAAaJ,YAAa,eAC1BK,EAAWL,YAAa,aACxBM,EAAgBN,YAAa,kBAC7BO,EAAcP,YAAa,gBAC3BQ,EAAsBR,YAAa,yBACnCS,EAAeT,YAAa,sBAC5BU,EAAeV,YAAa,sBAC5BW,EAAqBX,YAAa,wBAClCY,EAAkBZ,YAAa,kCAEtCa,EAAe,CACjBC,OAAQ,GACRC,MAAO,GACPC,MAAO,CAAEnC,OAAO,EAAOoC,KAAM,IAC7BC,MAAO,EACPC,gBAAiB,EACjBC,QAAS,GACTC,iBAAkB,EAClBC,qBAAqB,EACrBC,gBAAiB,GACjBC,kBAAmB,IAGjBC,EAAgBC,YAAcb,GAAc,SAAAc,GAC9CA,EAEKC,QAAQ7B,GAAW,SAAC8B,EAAOC,GACxB,GAAIA,EAAOC,QAAS,CAChB,IAAIC,EAAI,YAAOH,EAAMf,QACrBkB,EAAKC,KAAKC,MAAMF,EAAM5E,YAAY0E,EAAOC,UACzCF,EAAMf,OAASkB,EACfH,EAAMV,sBAIbS,QAAQpB,GAAqB,SAACqB,EAAOC,GAC9BA,EAAOC,UACPF,EAAMR,iBAAmBS,EAAOC,YAIvCH,QAAQhB,GAAiB,SAACiB,EAAOC,GAC9B,GAAIA,EAAOC,QAAS,CAChB,IAAMI,EAAQN,EAAMf,OAAOsB,WAAU,SAAA7E,GACjC,OAAOuE,EAAOC,UAAYxE,EAAKE,MAE/B4E,EAAa,GACjBA,EAAWC,IAAgB,IAAVH,EACjBE,EAAWE,KAAOJ,IAAUN,EAAMf,OAAO0B,OAAS,EAClDX,EAAML,kBAAoBa,MAIjCT,QAAQ3B,GAAU,SAAC4B,EAAOC,GACnBA,EAAOC,UACPF,EAAMd,MAAQe,EAAOC,SAGrBD,EAAOC,QAAQS,OACfX,EAAMP,oBAAsBT,EAAaS,oBAEzCO,EAAMP,qBAAsB,KAGnCM,QAAQvB,GAAU,SAACwB,EAAOC,GACnBA,EAAOC,UACPF,EAAMX,MAAQY,EAAOC,YAI5BH,QAAQ1B,GAAY,SAAA2B,GACjBA,EAAMd,MAAQF,EAAaE,SAG9Ba,QAAQjB,GAAoB,SAACkB,EAAOC,GACjCD,EAAMN,gBAAkBO,EAAOC,WAGlCH,QAAQlB,GAAc,SAAAmB,GACnBA,EAAMP,oBAAsBT,EAAaS,uBAG5CM,QAAQnB,GAAc,SAAAoB,GACnBA,EAAMP,qBAAsB,KAG/BM,QAAQrB,GAAa,SAACsB,EAAOC,GAC1BD,EAAMV,gBAAkBN,EAAaM,gBACrCU,EAAMf,OAASD,EAAaC,OAC5Be,EAAMT,QAAUU,EAAOC,WAG1BH,QAAQzB,GAAW,SAAC0B,EAAOC,GACpBA,EAAOC,UACPF,EAAMb,MAAMnC,OAAQ,EACpBgD,EAAMb,MAAMC,KAAOa,EAAOC,YAGjCH,QAAQxB,GAAY,SAAAyB,GACjBA,EAAMb,MAAMnC,OAAQ,EACpBgD,EAAMb,MAAMC,KAAO,MAGtBW,QAAQtB,GAAe,SAACuB,EAAOC,GACxBA,EAAOC,UACPF,EAAMT,QAAUU,EAAOC,YAG9BU,gBAAe,kBAOjB,SAASC,EAAWC,GACvB,OAAO,SAACC,EAAUC,GACVF,GAAWA,EAAQH,OAAS,EACX,IAAIM,IAASlD,KACrBmD,OACJC,OAAOL,EAAS,EAAG,IACnBM,KAAKC,UACLD,MAAK,SAAAE,GACFP,EAAS3C,EAASrB,YAAWJ,YAAQ2E,EAAKC,eAE7CC,OAAM,SAAAC,GACHV,EAASzC,EAAUmD,EAAIC,aAG3BV,IAAW/B,OAAOC,MAAMyB,QACxBI,EAAS1C,MAQlB,SAASsD,EAAYb,GACxB,OAAO,SAACC,EAAUC,GACd,IACI1B,EACAsC,GAAc,GAFEZ,IAAW/B,OAAOM,UAIlBuB,EACGE,IAAW/B,OAAOO,kBACrCF,EAAkB0B,IAAW/B,OAAOK,iBAEhCsC,GAAc,GAEdA,GAAc,EACdb,EAASzC,EAAU,2FAGvByC,EAASrC,EAAYoC,IACrBxB,EAAkBN,EAAaM,gBAC/BsC,GAAc,GAEdA,IACiB,IAAIX,IAASlD,KACrBmD,OACJC,OAAOL,EAASxB,EAAkB,EAAG,IACrC8B,KAAKC,UACLD,MAAK,SAAAE,GACFP,EAAS7C,EAAUoD,EAAKC,UACxBR,EAASpC,EAAoB2C,EAAKO,iBAErCL,OAAM,SAAAC,GACHV,EAASzC,EAAUmD,EAAIC,cAMpC,SAASI,IACZ,OAAO,SAAAf,GACc,IAAIE,IAASlD,KACrBoD,OACJY,eAAe,CAAEC,MAAO,SAAUC,YAAa,cAC/Cb,KAAKC,UACLD,MAAK,SAAAE,GAAS,IAAD,gBACNY,EAAWC,OAAOC,WAAW,sBAAsBC,QACnD9E,EAAOC,SAASC,eAAe,QACnCF,EAAKG,MAAME,eAAX,QACA,IAAM0E,EAAQJ,GACR,UAAAZ,EAAKzF,YAAL,eAAWR,SAAX,UAAoBiG,EAAKzF,YAAzB,aAAoB,EAAWP,WAA/B,UAA0CgG,EAAKzF,YAA/C,aAA0C,EAAW0G,QAArD,UAA6DjB,EAAKzF,YAAlE,aAA6D,EAAW2G,MACxE,UAAAlB,EAAKzF,YAAL,eAAWP,WAAX,UAAsBgG,EAAKzF,YAA3B,aAAsB,EAAW0G,QAAjC,UAAyCjB,EAAKzF,YAA9C,aAAyC,EAAW2G,OAApD,UAA2DlB,EAAKzF,YAAhE,aAA2D,EAAWR,OAExEiH,GACA/E,EAAKG,MAAMC,WAAX,cAA+B2E,EAA/B,mCACA/E,EAAKG,MAAME,eAAX,QACAP,YAAciF,IAEdjF,iBAGPmE,OAAM,SAAAC,GACHpE,cACA0D,EAASzC,EAAUmD,EAAIC,cAvFxB9B,O,gCCxHf,sFAMa6C,EAAYtE,YAAa,cACzBuE,EAAYvE,YAAa,cACzBwE,EAAaxE,YAAa,eAQjCyE,EAAe/C,YANA,CACnBgD,WAAW,EACXC,QAAS,GACT3D,MAAO,KAGwC,SAAAW,GAC/CA,EAEGC,QAAQ0C,GAAW,SAACzC,GAEjBA,EAAM6C,WAAW,KAGlB9C,QAAQ2C,GAAW,SAAC1C,GACnBA,EAAM6C,WAAW,KAIlB9C,QAAQ4C,GAAY,SAAC3C,EAAMC,GAC3B,GAAIA,EAAOC,QAAS,CAAC,IAAD,IAEQD,EAAOC,QAA3B6C,EAFY,EAEZA,KAAMvC,EAFM,EAENA,WACPsC,EAAS,GACfA,EAAQE,UAAW,UAAAD,EAAKC,gBAAL,eAAeC,MAAMF,EAAKC,SAASC,KAAK,MAAOF,EAAKC,SAASE,QAAUH,EAAKC,SAASE,QAAQ,IAAI,GACpHJ,EAAQK,OAASJ,EAAK9G,KAAKC,MAAQ6G,EAAK9G,KAAKG,WAAY2G,EAAK9G,KAAKE,YAAa,GAChF2G,EAAQxG,QAASyG,EAAK9G,KAAKM,kBAAmB,GAC9CuG,EAAQM,cAAgBL,EAAK9G,KAAKmH,cAAc/H,OAAQ,GACxDyH,EAAQjH,KAAOkH,EAAKlH,KAAMX,YAAU6H,EAAKlH,MAAM,GAC/CiH,EAAQO,SAAW7C,EAAW6C,SAC9BP,EAAQQ,KAAO9C,EAAW8C,KAC1BtD,EAAM8C,QAAUA,EAEZ9C,EAAM8C,UAAS9C,EAAM6C,WAAY,OAIxCjC,gBAAe,kBAMb,SAAS2C,EAAa3H,GAC3B,OAAO,SAACmF,EAAUC,GAEC,IAAIC,IAASlD,KAErBoD,OAAOqC,SAAS5H,GACtBwF,KAAKC,UACLD,MAAK,SAAAE,GACJ,IAAMrC,EAAQ+B,IAAW/B,OAAOA,OAE1BqB,EAAQrB,EAAOsB,WAAW,SAAA7E,GAAO,OAAO4F,EAAK1F,KAAOF,EAAKE,MAC3D4E,EAAW,GACfA,EAAW6C,SAAqB,IAAT/C,EAAa,KAAKrB,EAAOqB,EAAO,GAAI1E,GAC3D4E,EAAW8C,KAAQhD,IAAUrB,EAAO0B,OAAQ,EAAI,KAAK1B,EAAOqB,EAAM,GAAG1E,GAErEmF,EAAS4B,EADM,CAACI,KAAKzB,EAAMd,WAAWA,QAGrCgB,OAAM,SAAAC,GAAQV,EAASzC,YAAUmD,EAAIC,cApB/BkB,O,0KCzCAa,EAPE,SAACC,GAChB,OAAO,SAACC,GAAD,OACL,cAAC,WAAD,CAAUC,SAHY,KAGtB,SACE,cAACF,EAAD,eAAeC,Q,uBCCfE,EAAUC,gBAAK,kBAAM,8DACrBC,EAASD,gBAAK,kBAAM,uDAaXE,MAXf,WACI,OACI,cAAC,IAAD,CAAQC,SAAUjG,YAAlB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOkG,OAAK,EAACC,KAAK,IAAIC,UAAWX,EAASM,KAC1C,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,UAAUC,UAAWX,EAASI,WCFjDQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnD,MAAK,YAAkD,IAA/CoD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCKRO,EAAcC,QACW,cAA7B3C,OAAOa,SAAS+B,UAEe,UAA7B5C,OAAOa,SAAS+B,UAEhB5C,OAAOa,SAAS+B,SAASC,MAAM,2DA0CnC,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACT9D,MAAK,SAACmE,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzF,QACfoF,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,+GAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,WAO5B/D,OAAM,SAACrC,GACN0G,QAAQ1G,MAAM,4CAA6CA,M,mEC1E3D8G,EAAgB,CAClBC,IAAK,OACLC,aAGEC,EAAcC,YAAgB,CAAEpH,OAAQW,IAAevD,MAAOuG,MAE9D0D,EAAmBC,YAAeN,EAAeG,GAE1CI,EAAQC,YAAe,CAChCC,QAASJ,EACTK,WAAY,SAAAC,GAAoB,OAC5BA,EAAqB,CACjBC,kBAAmB,CACfC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,QAE/DC,OAAOC,QAGdC,EAAYC,YAAahB,GAE7BiB,IAASC,OACL,cAAC,IAAD,CAAUlB,MAAOA,EAAjB,SACI,cAAC,IAAD,CAAamB,QAAS,KAAMJ,UAAWA,EAAvC,SACI,cAAC,EAAD,QAGR/J,SAASC,eAAe,SAG5B4G,ID9BO,SAAkBc,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIwC,IAAI5J,YAAwBmE,OAAOa,SAAS6E,MACpDC,SAAW3F,OAAOa,SAAS8E,OAIvC,OAGF3F,OAAO4F,iBAAiB,QAAQ,WAC9B,IAAM7C,EAAK,UAAMlH,YAAN,sBAEP6G,IAgEV,SAAiCK,EAAeC,GAE9C6C,MAAM9C,EAAO,CACX+C,QAAS,CAAE,iBAAkB,YAE5B7G,MAAK,SAAC8G,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5ClD,UAAUC,cAAckD,MAAMnH,MAAK,SAACmE,GAClCA,EAAaiD,aAAapH,MAAK,WAC7Be,OAAOa,SAASyF,eAKpBxD,EAAgBC,EAAOC,MAG1B3D,OAAM,WACLqE,QAAQC,IAAI,oEAtFV4C,CAAwBxD,EAAOC,GAI/BC,UAAUC,cAAckD,MAAMnH,MAAK,WACjCyE,QAAQC,IACN,+GAMJb,EAAgBC,EAAOC,OCG/BG,K","file":"static/js/main.76119e13.chunk.js","sourcesContent":["\r\n\r\nexport const splitUrls = obj => {\r\n  const thumb = obj.thumb ? obj.thumb + \" \" + \"200w\" + \", \" : \"\";\r\n  const small = obj.small ? obj.small + \" \" + \"400w\" + \", \" : \"\";\r\n  const regular = obj.regular ? obj.regular + \" \" + \"1080w\" + \", \" : \"\";\r\n  return thumb + small + regular;\r\n};\r\n\r\nexport const extractData = ary => {\r\n  let res = ary.map(item => {\r\n    let result = {};\r\n    result.id = item.id;\r\n    result.urls = splitUrls(item.urls);\r\n    result.tags = item.tags;\r\n    result.description = item.alt_description || item.description || \"\";\r\n    result.user =item.user?.name ||item.user.first_name + \" \" + item.user.last_name;\r\n    result.modal = {\r\n      name: item.user.name || item.first_name + \" \" + item.last_name || \"\",\r\n      twitter: item.user.twitter_username || \"\",\r\n    };\r\n    return result;\r\n  });\r\n  return res;\r\n};\r\n\r\nexport const createFormStyleLocationRelative = (str, baseClass) => {\r\n  switch (str) {\r\n    case \"/\":\r\n      return `${baseClass} form--search`;\r\n\r\n    case \"/images\":\r\n      return `${baseClass} form--images`;\r\n\r\n    default:\r\n      return `${baseClass} form--search`;\r\n  }\r\n};\r\n\r\nexport const getTags = ary => [\r\n  ...new Set(\r\n    ary\r\n      .map(item => item.tags)\r\n      .flat()\r\n      .map(item => item.title)\r\n  ),\r\n];\r\n\r\nexport function capitalizeFirstLetter(string) {\r\n  return string[0].toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport const getOptions = ary =>\r\n  ary.map(item => {\r\n    return { value: item, label: capitalizeFirstLetter(item) };\r\n  });\r\n\r\nexport const setBackground = backgroundURL => {\r\n  var root = document.getElementById(\"root\");\r\n\r\n  if (backgroundURL) {\r\n    root.style.background = `url(${backgroundURL}) no-repeat center center fixed`;\r\n    root.style.backgroundSize = `cover`;\r\n  } else {\r\n    root.classList.add(\"root--fallback-background\");\r\n  }\r\n};\r\n","export const accessKey = { accessKey: process.env.REACT_APP_ACCESS_KEY };\r\n\r\nexport const trending = ['flowers', 'wallpapers', 'backgrounds', 'happy', 'love'];\r\n\r\nexport const fallbackBackground = {\r\n    mobile: 'url(../images/background_mobile.jpg) no-repeat center center fixed',\r\n    small: 'background: url(../images/background_small.jpg) no-repeat center center fixed',\r\n    tablet: 'background: url(../images/background_tablet.jpg) no-repeat center center fixed',\r\n    desktop: 'background: url(../images/background_desktop.jpg) no-repeat center center fixed',\r\n    large: 'background: url(../images/background.jpg) no-repeat center center fixed',\r\n};\r\n\r\n//HjlzVyvVSsjd4F-NJ6IsI_DrtmEorpJd_oNwyPUtIBk  access key\r\n//Txe901QEbdj8M6STepiZyZyxBT7nC09KvDJuRr6QeRE  secret key\r\n","import { createAction, createReducer } from '@reduxjs/toolkit';\r\nimport Unsplash, { toJson } from 'unsplash-js';\r\nimport { extractData, getOptions, getTags, setBackground } from '../js/common';\r\nimport { accessKey } from '../js/fixtures';\r\n\r\nexport const getImages = createAction('IMAGES_GET');\r\nexport const getHints = createAction('HINTS_GET');\r\nexport const clearHints = createAction('HINTS_CLEAR');\r\nexport const showError = createAction('ERROR_SHOW');\r\nexport const clearError = createAction('ERROR_CLEAR');\r\nexport const setCount = createAction('COUNT_SET');\r\nexport const chooseSubject = createAction('SUBJECT_CHOOSE');\r\nexport const clearImages = createAction('IMAGES_CLEAR');\r\nexport const setCollectionLength = createAction('COLLECTION_LENGTH_SET');\r\nexport const showHintsMsg = createAction('HINTS_MESSAGE_SHOW');\r\nexport const hideHintsMsg = createAction('HINTS_MESSAGE_HIDE');\r\nexport const getBackgroundImage = createAction('GET_BACKGROUND_IMAGE');\r\nexport const checkNeighbours = createAction('CURRENT_IMAGE_NEIGHBOURS_CHECK');\r\n\r\nconst initialState = {\r\n    images: [],\r\n    hints: [],\r\n    error: { value: false, code: '' },\r\n    count: 0,\r\n    lastFetchedPage: 0,\r\n    subject: '',\r\n    collectionLength: 0,\r\n    hintsMessageVisible: false,\r\n    backgroundImage: {},\r\n    currentNeighbours: {},\r\n};\r\n\r\nconst imagesReducer = createReducer(initialState, builder => {\r\n    builder\r\n\r\n        .addCase(getImages, (state, action) => {\r\n            if (action.payload) {\r\n                let temp = [...state.images];\r\n                temp.push.apply(temp, extractData(action.payload));\r\n                state.images = temp;\r\n                state.lastFetchedPage++;\r\n            }\r\n        })\r\n\r\n        .addCase(setCollectionLength, (state, action) => {\r\n            if (action.payload) {\r\n                state.collectionLength = action.payload;\r\n            }\r\n        })\r\n\r\n        .addCase(checkNeighbours, (state, action) => {\r\n            if (action.payload) {\r\n                const index = state.images.findIndex(item => {\r\n                    return action.payload === item.id;\r\n                });\r\n                let neighbours = {};\r\n                neighbours.pre = index === 0 ? false : true;\r\n                neighbours.post = index === state.images.length - 1 ? false : true;\r\n                state.currentNeighbours = neighbours;\r\n            }\r\n        })\r\n\r\n        .addCase(getHints, (state, action) => {\r\n            if (action.payload) {\r\n                state.hints = action.payload;\r\n            }\r\n\r\n            if (action.payload.length) {\r\n                state.hintsMessageVisible = initialState.hintsMessageVisible;\r\n            } else {\r\n                state.hintsMessageVisible = true;\r\n            }\r\n        })\r\n        .addCase(setCount, (state, action) => {\r\n            if (action.payload) {\r\n                state.count = action.payload;\r\n            }\r\n        })\r\n\r\n        .addCase(clearHints, state => {\r\n            state.hints = initialState.hints;\r\n        })\r\n\r\n        .addCase(getBackgroundImage, (state, action) => {\r\n            state.backgroundImage = action.payload;\r\n        })\r\n\r\n        .addCase(hideHintsMsg, state => {\r\n            state.hintsMessageVisible = initialState.hintsMessageVisible;\r\n        })\r\n\r\n        .addCase(showHintsMsg, state => {\r\n            state.hintsMessageVisible = true;\r\n        })\r\n\r\n        .addCase(clearImages, (state, action) => {\r\n            state.lastFetchedPage = initialState.lastFetchedPage;\r\n            state.images = initialState.images;\r\n            state.subject = action.payload;\r\n        })\r\n\r\n        .addCase(showError, (state, action) => {\r\n            if (action.payload) {\r\n                state.error.value = true;\r\n                state.error.code = action.payload;\r\n            }\r\n        })\r\n        .addCase(clearError, state => {\r\n            state.error.value = false;\r\n            state.error.code = '';\r\n        })\r\n\r\n        .addCase(chooseSubject, (state, action) => {\r\n            if (action.payload) {\r\n                state.subject = action.payload;\r\n            }\r\n        })\r\n        .addDefaultCase(() => {});\r\n});\r\n\r\nexport default imagesReducer;\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport function fetchHints(pattern) {\r\n    return (dispatch, getState) => {\r\n        if (pattern && pattern.length > 3) {\r\n            const unsplash = new Unsplash(accessKey);\r\n            unsplash.search\r\n                .photos(pattern, 1, 30)\r\n                .then(toJson)\r\n                .then(json => {\r\n                    dispatch(getHints(getOptions(getTags(json.results))));\r\n                })\r\n                .catch(err => {\r\n                    dispatch(showError(err.message));\r\n                });\r\n        } else {\r\n            if (getState().images.hints.length) {\r\n                dispatch(clearHints());\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nexport function fetchImages(pattern) {\r\n    return (dispatch, getState) => {\r\n        const lastSubject = getState().images.subject;\r\n        var lastFetchedPage, collectionLength;\r\n        var shouldFetch = false;\r\n\r\n        if (lastSubject === pattern) {\r\n            collectionLength = getState().images.collectionLength;\r\n            lastFetchedPage = getState().images.lastFetchedPage;\r\n            if (collectionLength > lastFetchedPage) {\r\n                shouldFetch = true;\r\n            } else {\r\n                shouldFetch = false;\r\n                dispatch(showError('Nie ma więcej zdjęć w danej kategorii - nie próbuj ich pobrać'));\r\n            }\r\n        } else {\r\n            dispatch(clearImages(pattern));\r\n            lastFetchedPage = initialState.lastFetchedPage;\r\n            shouldFetch = true;\r\n        }\r\n        if (shouldFetch) {\r\n            const unsplash = new Unsplash(accessKey);\r\n            unsplash.search\r\n                .photos(pattern, lastFetchedPage + 1, 30)\r\n                .then(toJson)\r\n                .then(json => {\r\n                    dispatch(getImages(json.results));\r\n                    dispatch(setCollectionLength(json.total_pages));\r\n                })\r\n                .catch(err => {\r\n                    dispatch(showError(err.message));\r\n                });\r\n        }\r\n    };\r\n}\r\n\r\nexport function fetchBackgroundImage() {\r\n    return dispatch => {\r\n        const unsplash = new Unsplash(accessKey);\r\n        unsplash.photos\r\n            .getRandomPhoto({ query: 'nature', orientation: 'landscape' })\r\n            .then(toJson)\r\n            .then(json => {\r\n                let isMobile = window.matchMedia('(max-width: 768px)').matches;\r\n                var root = document.getElementById('root');\r\n                root.style.backgroundSize = `cover`;\r\n                const image = isMobile\r\n                    ? json.urls?.small || json.urls?.regular || json.urls?.full || json.urls?.raw\r\n                    : json.urls?.regular || json.urls?.full || json.urls?.raw || json.urls?.small;\r\n\r\n                if (image) {\r\n                    root.style.background = `url(${image}) no-repeat center center fixed`;\r\n                    root.style.backgroundSize = `cover`;\r\n                    setBackground(image);\r\n                } else {\r\n                    setBackground();\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setBackground();\r\n                dispatch(showError(err.message));\r\n            });\r\n    };\r\n}\r\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\r\nimport Unsplash, { toJson } from \"unsplash-js\";\r\nimport { splitUrls } from \"../js/common\";\r\nimport {accessKey} from '../js/fixtures';\r\nimport {showError} from'./imagesReducer';\r\n\r\nexport const showModal = createAction(\"MODAL_SHOW\");\r\nexport const hideModal = createAction(\"MODAL_HIDE\");\r\nexport const getDetails = createAction(\"DETAILS_GET\");\r\n\r\nconst initialState = {\r\n  isVisible: false,\r\n  details: {},\r\n  error: ''\r\n};\r\n\r\nconst modalReducer = createReducer(initialState, builder => {\r\n  builder\r\n    \r\n    .addCase(showModal, (state) => {\r\n       \r\n        state.isVisible =true;\r\n              \r\n      })\r\n      .addCase(hideModal, (state) => {\r\n        state.isVisible =false;\r\n        \r\n      })  \r\n     \r\n      .addCase(getDetails, (state,action) => {\r\n       if (action.payload) {\r\n        \r\n        const {data, neighbours} = action.payload;\r\n        const details ={};\r\n        details.location = data.location?.city? data.location.city+', '+((data.location.country)? data.location.country:''):'';\r\n        details.author = data.user.name || data.user.last_name ||data.user.first_name ||'';\r\n        details.twitter =data.user.twitter_username ||'';\r\n        details.profile_image = data.user.profile_image.small ||'';\r\n        details.urls = data.urls? splitUrls(data.urls):'';\r\n        details.previous = neighbours.previous;\r\n        details.next = neighbours.next;\r\n        state.details = details;\r\n\r\n        if (state.details){state.isVisible = true}\r\n      }\r\n        \r\n      }) \r\n    .addDefaultCase(() => {});\r\n});\r\n\r\nexport default modalReducer;\r\n\r\n\r\nexport function fetchDetails(id) {\r\n  return (dispatch, getState) => {\r\n    \r\n    const unsplash = new Unsplash(accessKey);\r\n    \r\n    unsplash.photos.getPhoto(id)\r\n      .then(toJson)\r\n      .then(json => {\r\n        const images =getState().images.images;\r\n        \r\n        const index = images.findIndex((item=>{return(json.id === item.id)}));\r\n        let neighbours={}\r\n        neighbours.previous = (index ===0)? null:images[index -1 ].id;\r\n        neighbours.next = (index === images.length -1)? null:images[index+1].id;\r\n        const result = {data:json, neighbours:neighbours };\r\n        dispatch(getDetails(result));\r\n        \r\n      }).catch(err => {dispatch(showError(err.message))});\r\n  };\r\n}\r\n\r\n","import React, { Suspense } from \"react\";\r\nconst EmptyLoader = () => null;\r\nconst Awaiting = (Component) => {\r\n  return (props) => (\r\n    <Suspense fallback={EmptyLoader()}>\r\n      <Component {...props} />\r\n    </Suspense>\r\n  );\r\n};\r\nexport default Awaiting;\r\n","import { lazy } from 'react';\nimport Awaiting from './awaiting';\nimport '../styles/App.css';\n//import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst Results = lazy(() => import('./Results'));\nconst Search = lazy(() => import('./SearchSection'));\n\nfunction App() {\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route exact path=\"/\" component={Awaiting(Search)} />\n                <Route exact path=\"/images\" component={Awaiting(Results)} />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { register } from '../src/serviceWorkerRegistration';\nimport { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'reduxjs-toolkit-persist';\nimport storage from 'reduxjs-toolkit-persist/lib/storage';\nimport { PersistGate } from 'reduxjs-toolkit-persist/integration/react';\n\nimport imagesReducer from './redux/imagesReducer';\nimport modalReducer from './redux/modalReducer';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n};\n\nconst rootReducer = combineReducers({ images: imagesReducer, modal: modalReducer });\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n    middleware: getDefaultMiddleware =>\n        getDefaultMiddleware({\n            serializableCheck: {\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n            },\n        }).concat(thunk),\n});\n\nlet persistor = persistStore(store);\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root'),\n);\n\nreportWebVitals();\nregister();\n"],"sourceRoot":""}