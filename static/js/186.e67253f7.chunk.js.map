{"version":3,"file":"static/js/186.e67253f7.chunk.js","mappings":"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","sources":["pages/ResultsPage/parts/Modal/parts/Author.tsx","pages/ResultsPage/parts/Modal/parts/Add.tsx","pages/ResultsPage/parts/Modal/parts/Close.tsx","pages/ResultsPage/parts/Modal/parts/Image.tsx","pages/ResultsPage/parts/Modal/parts/Info.tsx","pages/ResultsPage/parts/Modal/parts/Like.tsx","pages/ResultsPage/parts/Modal/parts/Place.tsx","pages/ResultsPage/parts/Modal/parts/NextImage.tsx","pages/ResultsPage/parts/Modal/parts/PreviousImage.tsx","pages/ResultsPage/parts/Modal/parts/Share.tsx","pages/ResultsPage/parts/Modal/ModalContent.tsx","pages/ResultsPage/parts/Modal/Modal.tsx","pages/ResultsPage/parts/styled.ts","pages/ResultsPage/parts/Images/Image.tsx","pages/ResultsPage/parts/Images/Subject.tsx","pages/ResultsPage/parts/Images/BottomControl.tsx","pages/ResultsPage/parts/Images/Images.tsx","pages/ResultsPage/styled.ts","pages/ResultsPage/ResultsPage.tsx"],"sourcesContent":["import * as React from \"react\";\r\n\r\ninterface Props {\r\n    author: string;\r\n    twitter: string;\r\n    profileImageLink: string;\r\n}\r\nconst Author = (props: Props) => {\r\n    const { author, profileImageLink, twitter } = props;\r\n    return (\r\n        <div className=\"modal-content__header-author\">\r\n            <div className=\"author-data\">\r\n                <img className=\"author-data__image\" src={profileImageLink} alt={author} />\r\n                <div className=\"author-data__personal\">\r\n                    <div className=\"author-data__name\">{author}</div>\r\n                    {twitter && <div className=\"author-data__twitter\">{\"@\" + twitter}</div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Author;\r\n","import * as React from \"react\";\nimport Icons from \"assets/icons\";\n\nconst Add = React.memo(() => {\n    return (\n        <div className=\"modal-content__button-wrapper\">\n            <button className=\"modal-content__button\" aria-label=\"Add\">\n                <Icons.Add />\n            </button>\n        </div>\n    );\n});\nexport default Add;\n","import * as React from \"react\";\r\n\r\nimport Icons from \"assets/icons\";\r\n\r\nimport { useDispatchAction } from \"hooks\";\r\n\r\nconst Close = () => {\r\n    const { hideModal } = useDispatchAction();\r\n    const handleClick = React.useCallback(() => hideModal(), [hideModal]);\r\n    return (\r\n        <div className=\"modal-close__wrapper\">\r\n            <button aria-label=\"Close\" className=\"modal-close__button\" type=\"button\" onClick={handleClick}>\r\n                <Icons.Close />\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Close;\r\n","import * as React from \"react\";\r\ninterface Props {\r\n    author: string;\r\n    urls: string;\r\n}\r\n\r\nconst Image = (props: Props) => {\r\n    const { author, urls } = props;\r\n\r\n    return (\r\n        <img\r\n            alt={author}\r\n            className=\"modal-content__image fade-in\"\r\n            sizes=\"(max-width: 767px) 100vw, (max-width: 532px) 500px, (max-height: 521px) 500px, (min-aspect-ratio: 3711/2562) calc((calc(100vh - 175px)) * 1.44848), calc(100vw - 32px)\"\r\n            srcSet={urls}\r\n        />\r\n    );\r\n};\r\nexport default Image;\r\n","import * as React from \"react\";\nimport Icons from \"assets/icons\";\n\nconst Info = React.memo(() => {\n    return (\n        <div className=\"modal-content__button-wrapper\">\n            <button className=\"modal-content__button\" aria-label=\"Inforamtions\">\n                <Icons.Info />\n                <span className=\"icon-button__text\">Info</span>\n            </button>\n        </div>\n    );\n});\nexport default Info;\n","import * as React from \"react\";\nimport Icons from \"assets/icons\";\n\nconst Like = React.memo(() => {\n    return (\n        <div className=\"modal-content__button-wrapper\">\n            <button className=\"modal-content__button\" aria-label=\"Like\">\n                <Icons.Like />\n            </button>\n        </div>\n    );\n});\nexport default Like;\n","import * as React from \"react\";\r\n\r\nimport Icons from \"assets/icons\";\r\n\r\ninterface Props {\r\n    location: string;\r\n}\r\nconst Place = (props: Props) => {\r\n    const { location } = props;\r\n\r\n    return (\r\n        <div className=\"modal-content__location\">\r\n            {location && (\r\n                <>\r\n                    <Icons.Location />\r\n                    <span className=\"icon-button__text\">{location}</span>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default Place;\r\n","import * as React from \"react\";\r\n\r\nimport { debounce } from \"lodash\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport useDispatchAction from \"hooks/useDispatchAction\";\r\nimport Icons from \"assets/icons\";\r\n\r\nimport { selectNextModalId } from \"reduxware/redux/selectors\";\r\n\r\nconst NextImage = () => {\r\n    const nextId = useSelector(selectNextModalId);\r\n    const { setImageIdForModal } = useDispatchAction();\r\n\r\n    const showModal = React.useCallback(\r\n        debounce(() => {\r\n            nextId && setImageIdForModal(nextId);\r\n        }, 100),\r\n        [nextId]\r\n    );\r\n    return (\r\n        <aside className=\"modal-content__aside right\" onClick={showModal}>\r\n            <div className=\"modal-content__arrow-box\">\r\n                <Icons.Next className={nextId ? \"modal-content__arrow-svg visible\" : \"modal-content__arrow-svg\"} />\r\n            </div>\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default NextImage;\r\n","import * as React from \"react\";\r\n\r\nimport { debounce } from \"lodash\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport useDispatchAction from \"hooks/useDispatchAction\";\r\nimport Icons from \"assets/icons\";\r\n\r\nimport { selectPreviousModalId } from \"reduxware/redux/selectors\";\r\n\r\nconst PreviousImage = () => {\r\n    const Id = useSelector(selectPreviousModalId);\r\n\r\n    const { setImageIdForModal } = useDispatchAction();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const showModal = React.useCallback(\r\n        debounce(() => {\r\n            Id && setImageIdForModal(Id);\r\n        }, 100),\r\n        [Id]\r\n    );\r\n    return (\r\n        <aside className=\"modal-content__aside left\" onClick={showModal}>\r\n            <div className=\"modal-content__arrow-box\">\r\n                <Icons.Previous className={Id ? \"modal-content__arrow-svg visible\" : \"modal-content__arrow-svg\"} />\r\n            </div>\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default PreviousImage;\r\n","import * as React from \"react\";\nimport Icons from \"assets/icons\";\n\nconst Share = React.memo(() => {\n    return (\n        <div className=\"modal-content__button-wrapper\">\n            <button className=\"modal-content__button\" aria-label=\"Share\">\n                <Icons.Share />\n                <span className=\"icon-button__text\">Share</span>\n            </button>\n        </div>\n    );\n});\nexport default Share;\n","import * as React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Author, Close, Image, Like, ToPreviousImage, ToNextImage, Place, Share, Info, Add } from \"./parts\";\r\n\r\nimport { selectDataForModal } from \"reduxware/redux/selectors\";\r\n\r\nconst ModalContent = React.forwardRef((props, ref) => {\r\n    const { location, author, twitter, urls, profileImage } = useSelector(selectDataForModal);\r\n\r\n    if (!urls) return null;\r\n\r\n    return (\r\n        <div className=\"modal-content__container fade-in\">\r\n            <Close />\r\n            <ToPreviousImage />\r\n            <article className=\"modal-content\">\r\n                <header className=\"modal-content__header\">\r\n                    <Author profileImageLink={profileImage} author={author} twitter={twitter} />\r\n                    <Like />\r\n                    <Add />\r\n                </header>\r\n\r\n                <Image author={author} urls={urls} />\r\n\r\n                <footer className=\"modal-content__footer\">\r\n                    <Place location={location} />\r\n                    <Share />\r\n                    <Info />\r\n                </footer>\r\n            </article>\r\n            <ToNextImage />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ModalContent;\r\n\r\n/**\r\n * todo własciwie urls jest mocno wykluczjące, może by pobrać i sprawdzić urls o poziom wyżej\r\n * */\r\n","import * as React from \"react\";\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { RootState } from \"types\";\r\nimport ModalContent from \"./ModalContent\";\r\n\r\ninterface Props {\r\n    isModalVisible: boolean;\r\n}\r\n\r\nfunction MyModal(props: Props) {\r\n    const { isModalVisible } = props;\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={isModalVisible}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                id=\"my-modal\"\r\n            >\r\n                <ModalContent />\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    isModalVisible: state.modal.isVisible,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(MyModal);\r\n","import { Box } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nexport const Tag = styled(\"button\")(({ theme }) => ({\r\n    backgroundColor: \"#eee\",\r\n    paddingRight: theme.spacing(1),\r\n    paddingLeft: theme.spacing(1),\r\n    borderRadius: \"2px\",\r\n    textDecoration: \"none\",\r\n    fontSize: \"14px\",\r\n    transition: \"all 0.1s ease-in-out\",\r\n    textTransform: \"capitalize\",\r\n    height: theme.spacing(3.25),\r\n    display: \"inline-block\",\r\n    color: \"#767676\",\r\n    border: \"none\",\r\n    cursor: \"pointer\",\r\n    \"&:disabled, &[disabled]\": { opacity: 0.34, cursor: \"default\" },\r\n    \"&:hover:enabled\": {\r\n        backgroundColor: \"#e1e1e1\",\r\n        color: \"#111\",\r\n    },\r\n}));\r\n\r\nexport const ImageFigCaption = styled(\"figcaption\")(({ theme }) => ({\r\n    visibility: \"hidden\",\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    gap: theme.spacing(1),\r\n}));\r\n\r\nexport const Loading = styled(Box)(({ theme }) => ({\r\n    textAlign: \"center\",\r\n    fontSize: \"2rem\",\r\n    \"&:after\": { content: '\" .\"', animation: \"dots 1s steps(5, end) infinite\" },\r\n\r\n    \"@keyframes dots\": {\r\n        \"0%, 20%\": {\r\n            color: \"rgba(0, 0, 0, 0)\",\r\n            textShadow: \"0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0)\",\r\n        },\r\n        \"40%\": {\r\n            color: \"black\",\r\n            textShadow: \"0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0)\",\r\n        },\r\n        \"60%\": { textShadow: \"0.25em 0 0 black, 0.5em 0 0 rgba(0, 0, 0, 0)\" },\r\n        \"80%,   100%\": { textShadow: \"0.25em 0 0 black, 0.5em 0 0 black\" },\r\n    },\r\n}));\r\n\r\nexport const ImagesContentWrapper = styled(\"section\")(({ theme }) => ({\r\n    paddingLeft: theme.spacing(1.5),\r\n    paddingRight: theme.spacing(1.5),\r\n    maxWidth: \"1320px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n}));\r\n\r\nexport const FormContainer = styled(Box)(({ theme }) => ({\r\n    paddingLeft: theme.spacing(1.5),\r\n    paddingRight: theme.spacing(1.5),\r\n    maxWidth: \"1320px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    paddingTop: \"12px\",\r\n}));\r\n","import * as React from \"react\";\r\n\r\nimport { debounce } from \"lodash\";\r\nimport { connect, useSelector } from \"react-redux\";\r\n\r\nimport { Tag, ImageFigCaption } from \"../styled\";\r\nimport { AppDispatch, FetchImages, ShowMessage } from \"types/index\";\r\nimport { fetchImages } from \"reduxware/redux/thunks\";\r\nimport { selectIsOnline } from \"reduxware/redux/selectors\";\r\nimport { useMessage, useDispatchAction } from \"hooks\";\r\n\r\ninterface Props {\r\n    id: string;\r\n    urls: string;\r\n    description: string;\r\n    user: string;\r\n    tags: { title: string }[];\r\n    loadHandler?: () => void;\r\n    fetchImages: FetchImages;\r\n}\r\n\r\nconst Image = (props: Props) => {\r\n    const { id, user, description, urls, tags, loadHandler, fetchImages } = props;\r\n    const refTags = React.useRef<HTMLDivElement>(null);\r\n    const { setImageIdForModal, showModal } = useDispatchAction();\r\n    const isOnline = useSelector(selectIsOnline);\r\n    const showMessage = useMessage();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const activateModal = React.useCallback(\r\n        debounce(() => {\r\n            setImageIdForModal(id);\r\n            showModal();\r\n        }, 100),\r\n        [id]\r\n    );\r\n    return (\r\n        <figure className=\"fotos__box visible fade-in\" data-user={`Author: ${user}`} data-description={description}>\r\n            <div\r\n                className=\"image-container\"\r\n                data-user={`Author: ${user}`}\r\n                data-description={description}\r\n                onClick={activateModal}\r\n            >\r\n                <img\r\n                    className=\"fotos__image\"\r\n                    alt={description || \"Image description\"}\r\n                    sizes=\"(min-width: 1335px) 416px, (min-width: 992px) calc(calc(100vw - 72px) / 3), (min-width: 768px) calc(calc(100vw - 48px) / 2), 100vw\"\r\n                    srcSet={urls}\r\n                    itemProp=\"thumbnailUrl\"\r\n                    onLoad={() => {\r\n                        refTags.current?.classList.add(\"visible\");\r\n                        loadHandler && loadHandler();\r\n                    }}\r\n                    onError={() => loadHandler && loadHandler()}\r\n                ></img>\r\n            </div>\r\n            <ImageFigCaption ref={refTags}>\r\n                {tags.map((item, index) => (\r\n                    <Tag\r\n                        disabled={!isOnline}\r\n                        tabIndex={0}\r\n                        key={index}\r\n                        onClick={() => {\r\n                            fetchImages(item.title, showMessage);\r\n                        }}\r\n                    >\r\n                        {\" \" + item.title || \"\"}\r\n                    </Tag>\r\n                ))}\r\n            </ImageFigCaption>\r\n        </figure>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\r\n    fetchImages: (str: string, showMessage: ShowMessage) => dispatch(fetchImages(str, showMessage)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(Image);\r\n","import * as React from \"react\";\r\n\r\nimport { shallowEqual} from \"react-redux\";\r\n\r\nimport { useTypedSelector } from \"hooks/useTypedSelector\";\r\n\r\nconst Subject = () => {\r\n  const subject = useTypedSelector(state=>state.images.subject, shallowEqual);\r\n  return(\r\n  <div className=\"images__header\">\r\n    <h2 className=\"images__subject\">{subject}</h2>{\" \"}\r\n  </div>)\r\n};\r\n\r\nexport default Subject;","import React from \"react\";\r\nimport { type InjectedViewportProps } from \"react-in-viewport\";\r\n\r\nconst BottomControl = (props: InjectedViewportProps<HTMLDivElement>) => {\r\n    const { forwardedRef } = props;\r\n\r\n    return <div ref={forwardedRef}></div>;\r\n};\r\n\r\nexport default BottomControl;\r\n","import React, { useCallback, useRef } from \"react\";\r\nimport handleViewport from \"react-in-viewport\";\r\nimport uuid from \"react-uuid\";\r\n\r\nimport { isEmpty, debounce, after } from \"lodash\";\r\nimport { connect, useSelector } from \"react-redux\";\r\n\r\nimport Image from \"./Image\";\r\nimport Subject from \"./Subject\";\r\nimport BottomControl from \"./BottomControl\";\r\n\r\nimport { fetchImages } from \"reduxware/redux/thunks\";\r\nimport { AppDispatch, FetchImages, RootState } from \"types\";\r\nimport { selectAllImages } from \"reduxware/redux/selectors\";\r\nimport { ImagesContentWrapper, Loading } from \"../styled\";\r\nimport useMessage, { ShowMessage } from \"hooks/useMessage\";\r\n\r\nconst ViewportBottomMarker = handleViewport(BottomControl);\r\n\r\ninterface Props {\r\n    fetchImages: FetchImages;\r\n    subject: string;\r\n}\r\n\r\nconst Images = (props: Props) => {\r\n    const { fetchImages, subject } = props;\r\n    const images = useSelector(selectAllImages);\r\n    const showMessage = useMessage();\r\n\r\n    const refContainer = useRef<HTMLDivElement>(null);\r\n    const loadingRef = useRef<HTMLDivElement>(null);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const getMoreImages = useCallback(\r\n        debounce(() => {\r\n            fetchImages(subject, showMessage);\r\n        }, 300),\r\n        [fetchImages, subject]\r\n    );\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const loadHandler = useCallback(\r\n        after(images.length, () => {\r\n            refContainer.current?.classList.add(\"active\");\r\n            loadingRef.current?.classList.add(\"hidden\");\r\n        }),\r\n        [images]\r\n    );\r\n\r\n    if (!images || isEmpty(images)) return null;\r\n\r\n    return (\r\n        <>\r\n            <Subject />\r\n            <ImagesContentWrapper>\r\n                <Loading ref={loadingRef}>Loading images</Loading>\r\n                <article className=\"fotos__grid\" ref={refContainer}>\r\n                    {images.map(image => (\r\n                        <Image key={uuid()} {...image} loadHandler={loadHandler} />\r\n                    ))}\r\n                    <ViewportBottomMarker onEnterViewport={getMoreImages} />\r\n                </article>\r\n            </ImagesContentWrapper>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    subject: state.images.subject,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\r\n    fetchImages: (str: string, showMessage: ShowMessage) => dispatch(fetchImages(str, showMessage)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Images);\r\n","import { Box } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\n\nexport const ResultsPageFormContainer = styled(Box)(({ theme }) => ({\n    paddingLeft: theme.spacing(1.5),\n    paddingRight: theme.spacing(1.5),\n    paddingTop: theme.spacing(1.5),\n    maxWidth: \"1320px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n}));\n\nexport const ResultsPageContainer = styled(Box)(({ theme }) => ({\n    margin: \"0\",\n    padding: \"0\",\n    width: \"100%\",\n    minHeight: \"100vh\",\n    backgroundColor: theme.palette.common.white,\n}));\n","import React from \"react\";\r\n\r\nimport MyModal from \"./parts/Modal/Modal\";\r\nimport Images from \"./parts/Images\";\r\n\r\nimport { ResultsPageContainer, ResultsPageFormContainer } from \"./styled\";\r\nimport { ErrorMessage, Form, HiddenH1 } from \"components\";\r\n\r\nimport { useClearOnMount } from \"hooks\";\r\n\r\nconst ResultsPage = () => {\r\n    useClearOnMount();\r\n    return (\r\n        <ResultsPageContainer>\r\n            <HiddenH1 text=\"Matching images\" />\r\n            <ErrorMessage />\r\n            <ResultsPageFormContainer>\r\n                <Form />\r\n            </ResultsPageFormContainer>\r\n            <MyModal />\r\n            <Images />\r\n        </ResultsPageContainer>\r\n    );\r\n};\r\n\r\nexport default ResultsPage;\r\n"],"names":["props","author","profileImageLink","twitter","className","src","alt","React","hideModal","useDispatchAction","handleClick","type","onClick","urls","sizes","srcSet","location","nextId","useSelector","selectNextModalId","setImageIdForModal","showModal","debounce","Id","selectPreviousModalId","ref","selectDataForModal","profileImage","connect","state","isModalVisible","modal","isVisible","Modal","open","id","Tag","styled","theme","backgroundColor","paddingRight","spacing","paddingLeft","borderRadius","textDecoration","fontSize","transition","textTransform","height","display","color","border","cursor","opacity","ImageFigCaption","visibility","flexWrap","gap","Loading","Box","textAlign","content","animation","textShadow","ImagesContentWrapper","maxWidth","marginLeft","marginRight","paddingTop","dispatch","fetchImages","str","showMessage","user","description","tags","loadHandler","refTags","isOnline","selectIsOnline","useMessage","activateModal","itemProp","onLoad","current","classList","add","onError","map","item","index","disabled","tabIndex","title","subject","useTypedSelector","images","shallowEqual","forwardedRef","ViewportBottomMarker","handleViewport","BottomControl","selectAllImages","refContainer","useRef","loadingRef","getMoreImages","useCallback","after","length","isEmpty","image","uuid","onEnterViewport","ResultsPageFormContainer","ResultsPageContainer","margin","padding","width","minHeight","palette","common","white","useClearOnMount","text"],"sourceRoot":""}