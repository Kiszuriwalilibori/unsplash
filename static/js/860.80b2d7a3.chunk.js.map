{"version":3,"file":"static/js/860.80b2d7a3.chunk.js","mappings":"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","sources":["pages/ResultsPage/parts/HeaderIcons.tsx","pages/ResultsPage/parts/Modal/parts/Image.tsx","pages/ResultsPage/parts/Modal/parts/AuthorDataContainer.tsx","pages/ResultsPage/parts/Modal/parts/AuthorName&Twitter.tsx","pages/ResultsPage/parts/Modal/parts/AuthorProfileImage.tsx","pages/ResultsPage/parts/Modal/parts/LocationContainer.tsx","pages/ResultsPage/parts/Modal/parts/ImageLocation.tsx","pages/ResultsPage/parts/Modal/parts/ModalCloseButton.tsx","pages/ResultsPage/parts/Modal/parts/ModalFadeContainer.tsx","pages/ResultsPage/parts/Modal/parts/NextImage.tsx","pages/ResultsPage/parts/Modal/parts/PreviousImage.tsx","pages/ResultsPage/parts/Modal/ImageMagnified.tsx","pages/ResultsPage/parts/Modal/Modal.tsx","pages/ResultsPage/parts/styled.ts","pages/ResultsPage/parts/Image.tsx","pages/ResultsPage/parts/ImagesSection/Subject.tsx","pages/ResultsPage/parts/ImagesSection/PageBottomControl.jsx","pages/ResultsPage/parts/ImagesSection/Images.tsx","pages/ResultsPage/styled.ts","pages/ResultsPage/ResultsPage.tsx"],"sourcesContent":["import * as React from \"react\";\r\nconst HeaderIcons: React.FC = props => {\r\n  return <div className=\"modalbody__header-icons\">{props.children}</div>;\r\n};\r\nexport default HeaderIcons;\r\n","import * as React from \"react\";\r\ninterface Props {\r\n  author: string;\r\n  urls: string;\r\n}\r\n\r\nconst Image = (props: Props) => {\r\n  const { author, urls } = props;\r\n\r\n  return <img alt={author} className=\"modalbody__image fade-in\" sizes=\"(max-width: 767px) 100vw, (max-width: 532px) 500px, (max-height: 521px) 500px, (min-aspect-ratio: 3711/2562) calc((calc(100vh - 175px)) * 1.44848), calc(100vw - 32px)\" srcSet={urls} />;\r\n};\r\nexport default Image;\r\n","import * as React from 'react';\r\nconst AuthorDataContainer: React.FC = props => {\r\n    return (\r\n        <div className=\"modalbody__header-author\">\r\n            <div className=\"author-data\">{props.children}</div>\r\n        </div>\r\n    );\r\n};\r\nexport default AuthorDataContainer;\r\n","import * as React from \"react\";\r\ninterface Props {\r\n  author: string;\r\n  twitter: string;\r\n}\r\nconst AuthorNameTwitter = (props: Props) => {\r\n  const { author, twitter } = props;\r\n  return (\r\n    <div className=\"modalbody__header-name-twitter\">\r\n      <div className=\"modalbody__header-name\">{author}</div>\r\n      {twitter && <div className=\"modalbody__header-twitter\">{\"@\" + twitter}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthorNameTwitter;\r\n","import * as React from \"react\";\r\ninterface Props {\r\n    profileImageLink: string;\r\n    author: string;\r\n}\r\nconst ProfileImage = (props: Readonly<Props>) => {\r\n    return (\r\n        <div className=\"modalbody__header-face\">\r\n            <img className=\"modalbody__header-image\" src={props.profileImageLink} alt={props.author} />\r\n        </div>\r\n    );\r\n};\r\nexport default ProfileImage;\r\n","import * as React from 'react';\r\nconst LocationContainer: React.FC = props => {\r\n    return <div className=\"modalbody__header-author footer\">{props.children}</div>;\r\n};\r\nexport default LocationContainer;\r\n","import * as React from \"react\";\r\n\r\nimport LocationContainer from \"./LocationContainer\";\r\nimport Icons from \"assets/icons\";\r\n\r\nimport { withDescription } from \"hocs\";\r\n\r\ninterface Props {\r\n    location: string;\r\n}\r\nconst ImageLocation = (props: Props) => {\r\n    const { location } = props;\r\n\r\n    return <LocationContainer>{location && withDescription(Icons.Location, location)}</LocationContainer>;\r\n};\r\nexport default ImageLocation;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Icons from \"assets/icons\";\r\n\r\nconst ModalCloseButton = () => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"modal-close__wrapper\">\r\n            <button\r\n                aria-label=\"Close\"\r\n                className=\"modal-close__button\"\r\n                type=\"button\"\r\n                onClick={() => dispatch({ type: \"MODAL_HIDE\" })}\r\n            >\r\n                <Icons.Close />\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalCloseButton;\r\n","import * as React from 'react';\r\nconst ModalFadeContainer: React.FC = props => {\r\n    return <div className=\"modalbody__container fade-in\">{props.children}</div>;\r\n};\r\nexport default ModalFadeContainer;\r\n","import * as React from \"react\";\r\n\r\nimport { debounce } from \"lodash\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport useDispatchAction from \"hooks/useDispatchAction\";\r\nimport Icons from \"assets/icons\";\r\n\r\nimport { selectNextModalId } from \"reduxware/redux/selectors\";\r\n\r\nconst NextImage = () => {\r\n    const nextId = useSelector(selectNextModalId);\r\n    const { setImageIdForModal } = useDispatchAction();\r\n\r\n    const showModal = React.useCallback(\r\n        debounce(() => {\r\n            nextId && setImageIdForModal(nextId);\r\n        }, 100),\r\n        [nextId]\r\n    );\r\n    return (\r\n        <aside className=\"modalbody__aside right\" onClick={showModal}>\r\n            <div className=\"modalbody__arrow-box\">\r\n                <Icons.Next className={nextId ? \"modalbody__arrow-svg visible\" : \"modalbody__arrow-svg\"} />\r\n            </div>\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default NextImage;\r\n","import * as React from \"react\";\r\n\r\nimport { debounce } from \"lodash\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport useDispatchAction from \"hooks/useDispatchAction\";\r\nimport Icons from \"assets/icons\";\r\n\r\nimport { selectPreviousModalId } from \"reduxware/redux/selectors\";\r\n\r\nconst PreviousImage = () => {\r\n    const Id = useSelector(selectPreviousModalId);\r\n\r\n    const { setImageIdForModal } = useDispatchAction();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const showModal = React.useCallback(\r\n        debounce(() => {\r\n            Id && setImageIdForModal(Id);\r\n        }, 100),\r\n        [Id]\r\n    );\r\n    return (\r\n        <aside className=\"modalbody__aside left\" onClick={showModal}>\r\n            <div className=\"modalbody__arrow-box\">\r\n                <Icons.Previous className={Id ? \"modalbody__arrow-svg visible\" : \"modalbody__arrow-svg\"} />\r\n            </div>\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default PreviousImage;\r\n","import * as React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport HeaderIcons from \"../HeaderIcons\";\r\nimport Icons from \"assets/icons\";\r\n\r\nimport {\r\n    Image,\r\n    AuthorProfileImage,\r\n    AuthorNameTwitter,\r\n    ToPreviousImage,\r\n    ToNextImage,\r\n    AuthorDataContainer,\r\n    ModalCloseButton,\r\n    ModalFadeContainer,\r\n    ImageLocation,\r\n} from \"./parts\";\r\n\r\nimport { withDescription, WithButtonAndWrapperForIcon } from \"hocs\";\r\nimport { selectDataForModal } from \"reduxware/redux/selectors\";\r\n\r\nconst ImageMagnified = React.forwardRef((props, ref) => {\r\n    const { location, author, twitter, urls, profileImage } = useSelector(selectDataForModal);\r\n\r\n    if (!urls) return null;\r\n    return (\r\n        <ModalFadeContainer>\r\n            <ModalCloseButton />\r\n            <ToPreviousImage />\r\n            <article className=\"modalbody\">\r\n                <header className=\"modalbody__header\">\r\n                    <AuthorDataContainer>\r\n                        <AuthorProfileImage profileImageLink={profileImage} author={author} />\r\n                        <AuthorNameTwitter author={author} twitter={twitter} />\r\n                    </AuthorDataContainer>\r\n\r\n                    <HeaderIcons>\r\n                        <WithButtonAndWrapperForIcon ariaLabel=\"Like\">\r\n                            <Icons.Like />\r\n                        </WithButtonAndWrapperForIcon>\r\n                        <WithButtonAndWrapperForIcon ariaLabel=\"Add\">\r\n                            <Icons.Add />\r\n                        </WithButtonAndWrapperForIcon>\r\n                    </HeaderIcons>\r\n                </header>\r\n\r\n                <Image author={author} urls={urls} />\r\n\r\n                <footer className=\"modalbody__header footer\">\r\n                    <ImageLocation location={location} />\r\n                    <WithButtonAndWrapperForIcon ariaLabel=\"Share\">\r\n                        {withDescription(Icons.Share, \"Share\")}\r\n                    </WithButtonAndWrapperForIcon>\r\n\r\n                    <WithButtonAndWrapperForIcon ariaLabel=\"Info\">\r\n                        {withDescription(Icons.Info, \"Info\")}\r\n                    </WithButtonAndWrapperForIcon>\r\n                </footer>\r\n            </article>\r\n            <ToNextImage />\r\n        </ModalFadeContainer>\r\n    );\r\n});\r\n\r\nexport default ImageMagnified;\r\n\r\n/**\r\n * todo własciwie urls jest mocno wykluczjące, może by pobrać i sprawdzić urls o poziom wyżej\r\n * */\r\n","import * as React from \"react\";\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { RootState } from \"types\";\r\nimport ImageMagnified from \"./ImageMagnified\";\r\n\r\ninterface Props {\r\n    isModalVisible: boolean;\r\n}\r\n\r\nfunction MyModal(props: Props) {\r\n    const { isModalVisible } = props;\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={isModalVisible}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                id=\"my-modal\"\r\n            >\r\n                <ImageMagnified />\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    isModalVisible: state.modal.isVisible,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(MyModal);\r\n","import { Box } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\n\nexport const Tag = styled(\"button\")(({ theme }) => ({\n    backgroundColor: \"#eee\",\n    paddingRight: theme.spacing(1),\n    paddingLeft: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    borderRadius: \"2px\",\n    textDecoration: \"none\",\n    fontSize: \"14px\",\n    transition: \"all 0.1s ease-in-out\",\n    textTransform: \"capitalize\",\n    height: theme.spacing(3.25),\n    display: \"inline-block\",\n    color: \"#767676\",\n    border: \"none\",\n    cursor: \"pointer\",\n    \"&:disabled, &[disabled]\": { opacity: 0.34, cursor: \"default\" },\n    \"&:hover:enabled\": {\n        backgroundColor: \"#e1e1e1\",\n        color: \"#111\",\n    },\n}));\n\nexport const ImageFigCaption = styled(\"figcaption\")(({ theme }) => ({\n    position: \"absolute\",\n    bottom: \"0\",\n    marginLeft: theme.spacing(-1),\n    left: \"0\",\n    visibility: \"hidden\",\n}));\n\nexport const ImagesContainer = styled(\"article\")(({ theme }) => ({\n    fontSize: \"15px\",\n    fontWeight: 400,\n    lineHeight: 1.6,\n    color: \"$color-dark-1\",\n    display: \"none\",\n}));\n\nexport const Loading = styled(Box)(({ theme }) => ({\n    textAlign: \"center\",\n    fontSize: \"2rem\",\n    \"&:after\": { content: '\" .\"', animation: \"dots 1s steps(5, end) infinite\" },\n\n    \"@keyframes dots\": {\n        \"0%, 20%\": {\n            color: \"rgba(0, 0, 0, 0)\",\n            textShadow: \"0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0)\",\n        },\n        \"40%\": {\n            color: \"black\",\n            textShadow: \"0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0)\",\n        },\n        \"60%\": { textShadow: \"0.25em 0 0 black, 0.5em 0 0 rgba(0, 0, 0, 0)\" },\n        \"80%,   100%\": { textShadow: \"0.25em 0 0 black, 0.5em 0 0 black\" },\n    },\n}));\n\nexport const ImagesContentWrapper = styled(\"section\")(({ theme }) => ({\n    paddingLeft: theme.spacing(1.5),\n    paddingRight: theme.spacing(1.5),\n    maxWidth: \"1320px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n}));\n\nexport const FormContainer = styled(Box)(({ theme }) => ({\n    paddingLeft: theme.spacing(1.5),\n    paddingRight: theme.spacing(1.5),\n    maxWidth: \"1320px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    paddingTop: \"12px\",\n}));\n","import * as React from \"react\";\r\n\r\nimport { debounce } from \"lodash\";\r\nimport { connect, useSelector } from \"react-redux\";\r\n// import { Button } from \"@mui/material\";\r\nimport { Tag, ImageFigCaption } from \"./styled\";\r\n\r\nimport useDispatchAction from \"hooks/useDispatchAction\";\r\n\r\nimport { AppDispatch, FetchImages } from \"types/index\";\r\nimport { fetchImages } from \"reduxware/redux/thunks\";\r\nimport { selectIsOnline } from \"reduxware/redux/selectors\";\r\n\r\ninterface Props {\r\n    id: string;\r\n    urls: string;\r\n    description: string;\r\n    user: string;\r\n    tags: { title: string }[];\r\n    loadHandler?: () => void;\r\n    fetchImages: FetchImages;\r\n}\r\n\r\nconst Image = (props: Props) => {\r\n    const { id, user, description, urls, tags, loadHandler, fetchImages } = props;\r\n    const refTags = React.useRef<HTMLDivElement>(null);\r\n    const { setImageIdForModal, showModal } = useDispatchAction();\r\n    const isOnline = useSelector(selectIsOnline);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const activateModal = React.useCallback(\r\n        debounce(() => {\r\n            setImageIdForModal(id);\r\n            showModal();\r\n        }, 100),\r\n        [id]\r\n    );\r\n    return (\r\n        <figure className=\"fotos__box visible fade-in\" data-user={`Author: ${user}`} data-description={description}>\r\n            <img\r\n                className=\"fotos__image\"\r\n                alt={description}\r\n                sizes=\"(min-width: 1335px) 416px, (min-width: 992px) calc(calc(100vw - 72px) / 3), (min-width: 768px) calc(calc(100vw - 48px) / 2), 100vw\"\r\n                srcSet={urls}\r\n                itemProp=\"thumbnailUrl\"\r\n                onLoad={() => {\r\n                    refTags.current?.classList.add(\"visible\");\r\n                    loadHandler && loadHandler();\r\n                }}\r\n                onError={() => loadHandler && loadHandler()}\r\n                onClick={activateModal}\r\n            ></img>\r\n            <ImageFigCaption ref={refTags}>\r\n                {tags.map((item, index) => (\r\n                    <Tag\r\n                        disabled={!isOnline}\r\n                        tabIndex={0}\r\n                        key={index}\r\n                        onClick={() => {\r\n                            fetchImages(item.title);\r\n                        }}\r\n                    >\r\n                        {\" \" + item.title || \"\"}\r\n                    </Tag>\r\n                ))}\r\n            </ImageFigCaption>\r\n        </figure>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\r\n    fetchImages: (str: string) => dispatch(fetchImages(str)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(Image);\r\n// export default Image;\r\n","import * as React from \"react\";\r\n\r\nimport { shallowEqual} from \"react-redux\";\r\n\r\nimport { useTypedSelector } from \"hooks/useTypedSelector\";\r\n\r\nconst Subject = () => {\r\n  const subject = useTypedSelector(state=>state.images.subject, shallowEqual);\r\n  return(\r\n  <div className=\"images__header\">\r\n    <h2 className=\"images__subject\">{subject}</h2>{\" \"}\r\n  </div>)\r\n};\r\n\r\nexport default Subject;","const pageBottomControl = props => {\r\n  const { inViewport, forwardedRef } = props;\r\n\r\n  return (\r\n    <div className=\"viewport-block\" ref={forwardedRef}>\r\n      <div style={{ width: \"400px\", height: \"200px\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default pageBottomControl;\r\n","import React, { useCallback, useRef } from \"react\";\r\nimport handleViewport from \"react-in-viewport\";\r\nimport uuid from \"react-uuid\";\r\n\r\nimport { isEmpty, debounce, after } from \"lodash\";\r\nimport { connect, useSelector } from \"react-redux\";\r\n\r\nimport Image from \"../Image\";\r\nimport Subject from \"./Subject\";\r\nimport Block from \"./PageBottomControl\";\r\n\r\nimport { fetchImages } from \"reduxware/redux/thunks\";\r\nimport { AppDispatch, FetchImages, RootState } from \"types\";\r\nimport { selectAllImages } from \"reduxware/redux/selectors\";\r\nimport { ImagesContainer, ImagesContentWrapper, Loading } from \"../styled\";\r\n\r\nconst ViewportBlock = handleViewport(Block);\r\n\r\ninterface Props {\r\n    fetchImages: FetchImages;\r\n    subject: string;\r\n}\r\n\r\nconst Images = (props: Props) => {\r\n    const { fetchImages, subject } = props;\r\n    const images = useSelector(selectAllImages);\r\n\r\n    const refContainer = useRef<HTMLDivElement>(null);\r\n    const loadingRef = useRef<HTMLDivElement>(null);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const handleScrollBottom = useCallback(\r\n        debounce(() => {\r\n            fetchImages(subject);\r\n        }, 300),\r\n        [fetchImages, subject]\r\n    );\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const loadHandler = useCallback(\r\n        after(images.length, () => {\r\n            refContainer.current?.classList.add(\"active\");\r\n            // loadingRef.current?.classList.remove(\"active\");\r\n            loadingRef.current?.classList.add(\"hidden\");\r\n        }),\r\n        [images]\r\n    );\r\n\r\n    if (!images || isEmpty(images)) return null;\r\n\r\n    return (\r\n        <>\r\n            <Subject />\r\n            <ImagesContentWrapper>\r\n                <Loading ref={loadingRef}>Loading images</Loading>\r\n                <div className=\"fotos__grid\">\r\n                    <ImagesContainer ref={refContainer}>\r\n                        {images.map(image => (\r\n                            <Image key={uuid()} {...image} loadHandler={loadHandler} />\r\n                        ))}\r\n                        <ViewportBlock onEnterViewport={() => handleScrollBottom()} />\r\n                    </ImagesContainer>\r\n                </div>\r\n            </ImagesContentWrapper>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    subject: state.images.subject,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\r\n    fetchImages: (str: string) => dispatch(fetchImages(str)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Images);\r\n","import { Box } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\n\nexport const ResultsPageFormContainer = styled(Box)(({ theme }) => ({\n    paddingLeft: theme.spacing(1.5),\n    paddingRight: theme.spacing(1.5),\n    paddingTop: theme.spacing(1.5),\n    maxWidth: \"1320px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n}));\n\nexport const ResultsPageContainer = styled(Box)(({ theme }) => ({\n    margin: \"0\",\n    padding: \"0\",\n    width: \"100%\",\n    minHeight: \"100vh\",\n    backgroundColor: theme.palette.common.white,\n}));\n","import React from \"react\";\r\n\r\nimport MyModal from \"./parts/Modal/Modal\";\r\nimport Images from \"./parts/ImagesSection/Images\";\r\n\r\nimport { ResultsPageContainer, ResultsPageFormContainer } from \"./styled\";\r\nimport { ErrorMessage, Form, HiddenH1 } from \"components\";\r\n\r\nimport { useClearOnMount } from \"hooks\";\r\n\r\nconst ResultsPage = () => {\r\n    useClearOnMount();\r\n    return (\r\n        <ResultsPageContainer>\r\n            <HiddenH1 text=\"Matching images\" />\r\n            <ErrorMessage />\r\n            <ResultsPageFormContainer>\r\n                <Form />\r\n            </ResultsPageFormContainer>\r\n            <MyModal />\r\n            <Images />\r\n        </ResultsPageContainer>\r\n    );\r\n};\r\n\r\nexport default ResultsPage;\r\n"],"names":["props","className","children","author","urls","alt","sizes","srcSet","twitter","src","profileImageLink","location","withDescription","Icons","dispatch","useDispatch","type","onClick","nextId","useSelector","selectNextModalId","setImageIdForModal","useDispatchAction","showModal","React","debounce","Id","selectPreviousModalId","ref","selectDataForModal","profileImage","AuthorProfileImage","ariaLabel","connect","state","isModalVisible","modal","isVisible","Modal","open","id","Tag","styled","theme","backgroundColor","paddingRight","spacing","paddingLeft","marginBottom","marginLeft","borderRadius","textDecoration","fontSize","transition","textTransform","height","display","color","border","cursor","opacity","ImageFigCaption","position","bottom","left","visibility","ImagesContainer","fontWeight","lineHeight","Loading","Box","textAlign","content","animation","textShadow","ImagesContentWrapper","maxWidth","marginRight","paddingTop","fetchImages","str","user","description","tags","loadHandler","refTags","isOnline","selectIsOnline","activateModal","itemProp","onLoad","current","classList","add","onError","map","item","index","disabled","tabIndex","title","subject","useTypedSelector","images","shallowEqual","inViewport","forwardedRef","style","width","ViewportBlock","handleViewport","Block","selectAllImages","refContainer","useRef","loadingRef","handleScrollBottom","useCallback","after","length","isEmpty","image","uuid","onEnterViewport","ResultsPageFormContainer","ResultsPageContainer","margin","padding","minHeight","palette","common","white","useClearOnMount","text"],"sourceRoot":""}