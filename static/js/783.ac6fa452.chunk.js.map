{"version":3,"file":"static/js/783.ac6fa452.chunk.js","mappings":"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","sources":["pages/SearchPage/parts/Header.tsx","pages/SearchPage/parts/Trending.tsx","../node_modules/@mui/material/Stack/Stack.js","pages/SearchPage/SearchPage.tsx"],"sourcesContent":["import * as React from \"react\";\r\n\r\nconst Header = React.memo(() => {\r\n    return (\r\n        <header>\r\n            <h1 className=\"search__header--main\">Unsplash</h1>\r\n            <h2 className=\"search__header--secondary\">\r\n                The internetâ€™s source of\r\n                <a className=\"search__license\" href=\"https://unsplash.com/license\">\r\n                    {\" \"}\r\n                    freely-usable images\r\n                </a>\r\n            </h2>\r\n            <h2 className=\"search__motto\">Powered by creators everywhere.</h2>;\r\n        </header>\r\n    );\r\n});\r\n\r\nexport default Header;\r\n","import * as React from \"react\";\r\nimport uuid from \"react-uuid\";\r\n\r\nimport useMessage, { ShowMessage } from \"hooks/useMessage\";\r\n\r\nimport PATHS from \"routes\";\r\nimport { fetchImages } from \"reduxware/redux/thunks\";\r\nimport { AppDispatch, FetchImages } from \"types\";\r\nimport { connect } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n    ary: string[];\r\n    fetchImages: FetchImages;\r\n}\r\n\r\nconst Trending = React.memo((props: Props) => {\r\n    const { ary, fetchImages } = props;\r\n    const showMessage = useMessage();\r\n    const navigate = useNavigate();\r\n\r\n    const clickHandler = (item: string) => {\r\n        navigate(PATHS.RESULTS);\r\n        fetchImages(item, showMessage);\r\n    };\r\n    return (\r\n        <div className=\"trending\">\r\n            <strong>Trending: </strong>\r\n            <ul className=\"trending__list\">\r\n                {ary.map((item, index, arr) => (\r\n                    <li\r\n                        role=\"button\"\r\n                        tabIndex={0}\r\n                        className={\r\n                            index === 0 ? \"trending__item\" : \"trending__item trending__item--with-preceding-comma\"\r\n                        }\r\n                        key={uuid()}\r\n                        onClick={() => clickHandler(item)}\r\n                    >\r\n                        {item}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\r\n    fetchImages: (str: string, showMessage: ShowMessage) => dispatch(fetchImages(str, showMessage)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Trending);\r\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUnarySpacing, getValue, handleBreakpoints, mergeBreakpointsInOrder, unstable_extendSxProp as extendSxProp, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nconst StackRoot = styled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(style);\nconst Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  const props = extendSxProp(themeProps);\n  const {\n      component = 'div',\n      direction = 'column',\n      spacing = 0,\n      divider,\n      children\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = {\n    direction,\n    spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;","import * as React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Header, Trending } from \"./parts\";\r\nimport { ErrorMessage, Form, TemporaryBackground } from \"components\";\r\nimport { trending } from \"js/fixtures\";\r\nimport { useCheckApiKey, useDispatchAction } from \"hooks\";\r\nimport { RootState } from \"components/AppProvider\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\ninterface Props {\r\n    isWithTemporaryBackground: boolean;\r\n}\r\n\r\nconst SearchPage = (props: Props) => {\r\n    const { isWithTemporaryBackground } = props;\r\n    const isKeyAvailable = useCheckApiKey();\r\n    const { clearHints } = useDispatchAction();\r\n\r\n    React.useEffect(() => {\r\n        clearHints();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    if (isWithTemporaryBackground) return <TemporaryBackground />;\r\n    return (\r\n        <div className=\"search\">\r\n            <Header />\r\n            {isKeyAvailable && (\r\n                <Stack spacing={3}>\r\n                    <Form />\r\n                    <Trending ary={trending} />\r\n                </Stack>\r\n            )}\r\n            <ErrorMessage />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    isWithTemporaryBackground: state.temporaryBackground.isVisible,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(SearchPage);\r\n"],"names":["React","className","href","Trending","props","ary","fetchImages","showMessage","useMessage","navigate","useNavigate","map","item","index","arr","role","tabIndex","onClick","PATHS","clickHandler","uuid","connect","dispatch","str","_excluded","joinChildren","children","separator","childrenArray","filter","Boolean","reduce","output","child","push","length","key","StackRoot","styled","name","slot","overridesResolver","styles","root","ownerState","theme","_extends","display","flexDirection","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","spacing","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","deepmerge","margin","row","column","getValue","mergeBreakpointsInOrder","Stack","inProps","ref","themeProps","useThemeProps","extendSxProp","component","divider","other","_objectWithoutPropertiesLoose","_jsx","as","state","isWithTemporaryBackground","temporaryBackground","isVisible","isKeyAvailable","useCheckApiKey","clearHints","useDispatchAction","trending"],"sourceRoot":""}